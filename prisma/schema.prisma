generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String        @id @default(dbgenerated("gen_random_uuid()"))
  name             String
  enrollmentNumber String        @unique
  email            String        @unique
  role             Role          @default(STUDENT)
  createdAt        DateTime      @default(now())
  authUserId       String        @unique
  avatar           String?
  department       String
  phone            String
  year             String
  fines            Fine[]
  reviews          Review[]
  transactions     Transaction[]
}

model Book {
  id           String        @id @default(uuid())
  title        String
  author       String
  available    Int           @default(1)
  copies       Int           @default(1)
  imageUrl     String?
  isbn         String        @unique
  publishedAt  DateTime
  description  String
  genre        String
  color        String?
  reviews      Review[]
  transactions Transaction[]
}

model Transaction {
  id         String            @id @default(uuid())
  userId     String
  bookId     String
  issueDate  DateTime          @default(now())
  dueDate    DateTime
  returnDate DateTime?
  status     TransactionStatus @default(ISSUED)
  Fine       Fine[]
  book       Book              @relation(fields: [bookId], references: [id])
  user       User              @relation(fields: [userId], references: [id])
}

model Review {
  id        String   @id @default(uuid())
  userId    String
  bookId    String
  rating    Int      @default(5)
  comment   String?
  createdAt DateTime @default(now())
  book      Book     @relation(fields: [bookId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Fine {
  id            String      @id @default(uuid())
  userId        String
  transactionId String
  amount        Float
  status        FineStatus  @default(PENDING)
  createdAt     DateTime    @default(now())
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  user          User        @relation(fields: [userId], references: [id])
}

enum Role {
  STUDENT
  LIBRARIAN
  ADMIN
}

enum TransactionStatus {
  ISSUED
  RETURNED
  OVERDUE
}

enum FineStatus {
  PENDING
  PAID
}
