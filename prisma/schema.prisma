  // prisma/schema.prisma
  generator client {
    provider = "prisma-client-js"
  }

  datasource db {
    provider = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
  }
  model User {
    id               String        @id @default(uuid())
    name             String
    enrollmentNumber String        @unique
    email            String        @unique
    avatar           String?
    year             String
    department       String 
    phone            String
    role             Role          @default(STUDENT)
    createdAt        DateTime      @default(now())
    authUserId       String    @unique
    transactions     Transaction[]
    reviews          Review[]
    fines            Fine[]
  }

  model Book {
    id           String        @id @default(uuid())
    title        String
    genre        String
    description  String
    author       String
    isbn         String        @unique
    copies       Int           @default(1)
    available    Int           @default(1)
    publishedAt  DateTime
    imageUrl     String?
    transactions Transaction[]
    reviews      Review[]
  }

  model Transaction {
    id         String            @id @default(uuid())
    userId     String
    bookId     String
    issueDate  DateTime          @default(now())
    dueDate    DateTime
    returnDate DateTime?
    status     TransactionStatus @default(ISSUED)
    user       User              @relation(fields: [userId], references: [id])
    book       Book              @relation(fields: [bookId], references: [id])

    Fine Fine[]
  }

  model Review {
    id        String   @id @default(uuid())
    userId    String
    bookId    String
    rating    Int      @default(5)
    comment   String?
    createdAt DateTime @default(now())
    user      User     @relation(fields: [userId], references: [id])
    book      Book     @relation(fields: [bookId], references: [id])
  }

  model Fine {
    id            String      @id @default(uuid())
    userId        String
    transactionId String
    amount        Float
    status        FineStatus  @default(PENDING)
    createdAt     DateTime    @default(now())
    user          User        @relation(fields: [userId], references: [id])
    transaction   Transaction @relation(fields: [transactionId], references: [id])
  }

  enum Role {
    STUDENT
    LIBRARIAN
    ADMIN
  }

  enum TransactionStatus {
    ISSUED
    RETURNED
    OVERDUE
  }

  enum FineStatus {
    PENDING
    PAID
  }
